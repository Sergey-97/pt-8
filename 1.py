# 1. Даны значения величины заработной платы заемщиков банка(zp) и значения их поведенческого кредитного
# скоринга(ks): zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны. Найдите коэффициент корреляции Пирсона с помощью ковариации и
# среднеквадратичных отклонений двух признаков, а затем с использованием функций из библиотек numpy и pandas.

import pandas as pd
import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

# Вычисление ковариации с помощью элементарных действий
mean_zp = np.mean(zp)
mean_ks = np.mean(ks)

cov_elem = np.sum((zp - mean_zp) * (ks - mean_ks)) / len(zp)

print("Ковариация (элементарные действия):", cov_elem)


# Для вычисления ковариации с помощью функции cov из библиотеки numpy, нужно передать два массива
# в качестве аргументов.

# Вычисление ковариации с помощью функции cov из numpy
cov_np = np.cov(zp, ks)[0][1]

print("Ковариация (numpy):", cov_np)

# Для вычисления коэффициента корреляции Пирсона можно использовать формулу:
# r = cov / (std_zp * std_ks)
# где cov - ковариация, std_zp - стандартное отклонение для zp, std_ks - стандартное отклонение для ks.
# Вычисление коэффициента корреляции Пирсона с помощью элементарных действий
std_zp = np.std(zp)
std_ks = np.std(ks)

corr_elem = cov_elem / (std_zp * std_ks)

print("Коэффициент корреляции Пирсона (элементарные действия):", corr_elem)

# Также можно использовать функцию corrcoef из библиотеки numpy для вычисления коэффициента корреляции Пирсона.
# Вычисление коэффициента корреляции Пирсона с помощью функции corrcoef из numpy
corr_np = np.corrcoef(zp, ks)[0][1]

print("Коэффициент корреляции Пирсона (numpy):", corr_np)

# Также можно использовать функцию corr из библиотеки pandas для вычисления коэффициента корреляции Пирсона.
# Создание DataFrame из массивов zp и ks
df = pd.DataFrame({'zp': zp, 'ks': ks})

# Вычисление коэффициента корреляции Пирсона с помощью функции corr из pandas
corr_pd = df['zp'].corr(df['ks'])

print("Коэффициент корреляции Пирсона (pandas):", corr_pd)
